#!/bin/ash
# env variables
source ffcp_parameter.conf

randomized=$(</dev/urandom tr -dc A-Z-a-z-0-9 | head -c24)
sourceeth="eth0"
privulafirst8="FD"
guestnetidentifier=1
privnetidentifier=2

#get last 40 bits from $sourceeth interface (spine)
hwaddr=$(ifconfig $sourceeth|grep HWaddr|awk '{print $5}')
hwaddrwocolon=$(echo $hwaddr|sed -e 's/://g')

guestnet=`echo $privulafirst8${hwaddrwocolon:2:2}:${hwaddrwocolon:4:2}${hwaddrwocolon:6:2}:${hwaddrwocolon:8:2}${hwaddrwocolon:10:1}$guestnetidentifier::/64`
guestnetip=`echo $privulafirst8${hwaddrwocolon:2:2}:${hwaddrwocolon:4:2}${hwaddrwocolon:6:2}:${hwaddrwocolon:8:2}${hwaddrwocolon:10:1}$guestnetidentifier::1/64`

privnet="$privulafirst8${hwaddrwocolon:2:2}:${hwaddrwocolon:4:2}${hwaddrwocolon:6:2}:${hwaddrwocolon:8:2}${hwaddrwocolon:10:1}$privnetidentifier::/64"
privnetip=`echo $privulafirst8${hwaddrwocolon:2:2}:${hwaddrwocolon:4:2}${hwaddrwocolon:6:2}:${hwaddrwocolon:8:2}${hwaddrwocolon:10:1}$privnetidentifier::1/64)`

# UCI
# hostname
uci set system.@system[0].hostname=$(echo -n "$hostnamebasis$hwaddrwocolon")
# private net ula
uci set network.lan.ula_prefix=$privnet
# mesh net ula
uci set network.guests.ula_prefix="$domainula/$domainulasize"

# set release/version
grep Version /etc/banner | awk '{ print $2}' > /lib/gluon/gluon-version
grep Release /etc/banner | awk '{ print $2}' > /lib/gluon/release

# set default MAC for gluon
echo $hwaddr > /lib/gluon/core/sysconfig/primary_mac

# repair init script announced
# old
#sed -i 's/collect.lua/announce.lua/g' /etc/hotplug.d/iface/10-gluon-announced
#chmod +x /lib/gluon/announce/collect.lua

# set wifi settings
if [ ! -z "$channel24" ] ; then
	uci set wireless.radio1.channel=$channel24
fi
if [ ! -z "$channel5" ] ; then
	uci set wireless.radio0.channel=$channel5
fi
if [ ! -z "$adhoc24mcast" ] ; then
	uci set wireless.adhoc24.mcast_rate=$adhoc24mcast
fi
if [ ! -z "$adhoc5mcast" ] ; then
	uci set wireless.adhoc5.mcast_rate=$adhoc5mcast
fi
if [ ! -z "$adhoc24ssid" ] ; then
	uci set wireless.adhoc24.ssid=$adhoc24ssid
fi
if [ ! -z "$adhoc5ssid" ] ; then
	uci set wireless.adhoc5.ssid=$adhoc5ssid
fi

# set zabbix servers and userparameters
zabbixparampath=/etc/zabbix_agentd.conf.d/userparameters
raise=0
if [ -n "$ZabbixServerValue" ] ; then
	echo $ZabbixServerFull >> /etc/zabbix_agentd.conf.d/servers
	echo "UnsafeUserParameters=1" >> $zabbixparampath
	echo "UserParameter=wifi.usersappriv24, iw dev appriv24 station dump|grep Station|wc -l" >> $zabbixparampath
	echo "UserParameter=wifi.usersappriv5, iw dev appriv5 station dump|grep Station|wc -l" >> $zabbixparampath
	echo "UserParameter=wifi.usersappub24, iw dev appub24 station dump|grep Station|wc -l" >> $zabbixparampath
	echo "UserParameter=wifi.usersappub5, iw dev appub5 station dump|grep Station|wc -l" >> $zabbixparampath
	echo "UserParameter=mesh.numbernodes, sudo /usr/sbin/batctl o|grep -v Originator|grep -v MainIF|wc -l" >> $zabbixparampath
	echo "UserParameter=mesh.numbergateways, sudo /usr/sbin/batctl gwl|grep -v Gateway|wc -l" >> $zabbixparampath
	echo "UserParameter=mesh.numbermacache, sudo /usr/sbin/batctl dc|grep -v MAC|grep -v ARP|wc -l" >> $zabbixparampath
	echo "UserParameter=mesh.numberneighbors, sudo batctl o |grep -v Originator|grep -v MainIF|awk -F')' '{print \$2}'|awk '{print \$1}'|awk '{print \$1}'|uniq -u|wc -l" >> $zabbixparampath
	echo "UserParameter=mesh.listneighbors, /lib/freifunkcp/neighbordiscovery" >> $zabbixparampath
	echo "UserParameter=mesh.linkquality[*], /lib/freifunkcp/linkquality" >> $zabbixparampath
	let "raise+=raise+1"
fi
if [ -n "$ZabbixServerActiveValue" ] ; then
	echo $ZabbixServerActiveFull >> /etc/zabbix_agentd.conf.d/servers
	let "raise+=raise+1"
fi
# enabling zabbix
if [ $raise -gt 1 ] ; then
	/etc/init.d/zabbix_agentd enable
fi

# set remote syslog server
if [ -n "$rsysloghost" ] ; then
	# remote host
	uci set system.@system[0].log_ip=$rsysloghost
	# your hostname used as prefix for log entries
	uci set system.@system[0].log_prefix=$hostnamebasis$hwaddrwocolon
	if [ -n "$rsyslogport" ] ; then
		uci set system.@system[0].log_port=$rsyslogport
	fi
fi

# set timezone
if [ -n "$timezone" ] ; then
	uci set system.@system[0].zonename=$timezone
fi

# set ntp servers
# ntp is always enabled
if [ -n "$ntpserver0" ] ; then
	uci delete system.ntp.server
	uci set system.ntp=timeserver
	uci set system.ntp.enable_server=1
	uci set system.ntp.server=$ntpserver0
	if [ -n "$ntpserver1" ] ; then
		uci add_list system.ntp.server=$ntpserver1
	fi
	if [ -n "$ntpserver2" ] ; then
		uci add_list system.ntp.server=$ntpserver2
	fi
	if [ -n "$ntpserver3" ] ; then
		uci add_list system.ntp.server=$ntpserver3
	fi
fi

# end
uci commit
exit 0
